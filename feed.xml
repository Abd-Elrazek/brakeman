<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.4">Jekyll</generator><link href="https://brakemanscanner.org/feed.xml" rel="self" type="application/atom+xml" /><link href="https://brakemanscanner.org/" rel="alternate" type="text/html" /><updated>2019-05-11T15:11:10-07:00</updated><id>https://brakemanscanner.org/feed.xml</id><title type="html">Brakeman</title><entry><title type="html">Brakeman 4.5.1 Released</title><link href="https://brakemanscanner.org/blog/2019/05/11/4-dot-5-1-released" rel="alternate" type="text/html" title="Brakeman 4.5.1 Released" /><published>2019-05-11T13:14:00-07:00</published><updated>2019-05-11T13:14:00-07:00</updated><id>https://brakemanscanner.org/blog/2019/05/11/4-dot-5-1-released</id><content type="html" xml:base="https://brakemanscanner.org/blog/2019/05/11/4-dot-5-1-released">&lt;p&gt;This release adds initial support for Rails 6!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 4.5.0:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Add initial Rails 6 support&lt;/li&gt;
  &lt;li&gt;Add optional check for &lt;code class=&quot;highlighter-rouge&quot;&gt;config.force_ssl&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1181&quot;&gt;#1181&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Add deserialization warning for &lt;code class=&quot;highlighter-rouge&quot;&gt;Oj.load/object_load&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Add SQL injection checks for &lt;code class=&quot;highlighter-rouge&quot;&gt;destroy_by&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;delete_by&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Add SQL injection checks for &lt;code class=&quot;highlighter-rouge&quot;&gt;find_or_create_by&lt;/code&gt; and friends&lt;/li&gt;
  &lt;li&gt;Check &lt;code class=&quot;highlighter-rouge&quot;&gt;link_to&lt;/code&gt; with block for href XSS (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1339&quot;&gt;#1339&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Convert &lt;code class=&quot;highlighter-rouge&quot;&gt;!!&lt;/code&gt; calls to boolean value (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1343&quot;&gt;#1343&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Use relative paths for &lt;code class=&quot;highlighter-rouge&quot;&gt;__FILE__&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Represent file paths internally as &lt;code class=&quot;highlighter-rouge&quot;&gt;Brakeman::FilePath&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Handle empty partial names&lt;/li&gt;
  &lt;li&gt;Handle trailing comma in block args&lt;/li&gt;
  &lt;li&gt;Remove code for Ruby versions prior to 1.9&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;initial-rails-6-support&quot;&gt;Initial Rails 6 Support&lt;/h3&gt;

&lt;p&gt;Rails 6 is (almost?) here!&lt;/p&gt;

&lt;p&gt;This release adds basic support internally for Rails 6 as well as the &lt;code class=&quot;highlighter-rouge&quot;&gt;-6&lt;/code&gt; option to force Rails 6 mode.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1335&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;optional-check-for-force-ssl-option&quot;&gt;Optional Check for Force SSL Option&lt;/h3&gt;

&lt;p&gt;In Rails, &lt;code class=&quot;highlighter-rouge&quot;&gt;config.force_ssl = true&lt;/code&gt; turns on HSTS, redirects HTTP to HTTPS, and sets the &lt;code class=&quot;highlighter-rouge&quot;&gt;secure&lt;/code&gt; flag on all cookies.&lt;/p&gt;

&lt;p&gt;A new optional check has been added to check if this option is enabled.&lt;/p&gt;

&lt;p&gt;To enable this new check, use &lt;code class=&quot;highlighter-rouge&quot;&gt;-A&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;--enable ForceSSL&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1344&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;deserialization-with-oj&quot;&gt;Deserialization with Oj&lt;/h3&gt;

&lt;p&gt;The deserialization check now looks for unsafe use of the &lt;code class=&quot;highlighter-rouge&quot;&gt;Oj&lt;/code&gt; JSON library.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1334&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;new-sql-injection-sinks&quot;&gt;New SQL Injection Sinks&lt;/h3&gt;

&lt;p&gt;The SQL injection check has been expanded to check for unsafe use of &lt;code class=&quot;highlighter-rouge&quot;&gt;destroy_by&lt;/code&gt;/&lt;code class=&quot;highlighter-rouge&quot;&gt;delete_by&lt;/code&gt; (new in Rails 6) and &lt;code class=&quot;highlighter-rouge&quot;&gt;find_or_create_by&lt;/code&gt; and related methods.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1337&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;link_to-with-block&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;link_to&lt;/code&gt; with Block&lt;/h3&gt;

&lt;p&gt;Brakeman now checks &lt;code class=&quot;highlighter-rouge&quot;&gt;link_to&lt;/code&gt; calls with blocks for &lt;code class=&quot;highlighter-rouge&quot;&gt;javascript:&lt;/code&gt; links.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1340&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;convert--to-boolean&quot;&gt;Convert &lt;code class=&quot;highlighter-rouge&quot;&gt;!!&lt;/code&gt; to Boolean&lt;/h3&gt;

&lt;p&gt;Use of &lt;code class=&quot;highlighter-rouge&quot;&gt;!!&lt;/code&gt; to convert values to booleans will be treated as safe (turned into &lt;code class=&quot;highlighter-rouge&quot;&gt;true or false&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1345&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;relative-path-for-__file__&quot;&gt;Relative Path for &lt;code class=&quot;highlighter-rouge&quot;&gt;__FILE__&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;When ruby_parser parses &lt;code class=&quot;highlighter-rouge&quot;&gt;__FILE__&lt;/code&gt;, it replaces it with the name of the current file. Unfortunately, Brakeman was passing in absolute paths for the current file.
This meant that the fingerprints for warnings including &lt;code class=&quot;highlighter-rouge&quot;&gt;__FILE__&lt;/code&gt; would vary based on the path where the code was scanned.&lt;/p&gt;

&lt;p&gt;Now a relative path is used instead, so fingerprints should stabilize.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1347&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;brakemanfilepath&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Brakeman::FilePath&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Internally, file paths are now represented with &lt;code class=&quot;highlighter-rouge&quot;&gt;Brakeman::FilePath&lt;/code&gt; to make it easier to manage absolute/relative paths as needed. This was a pretty huge change, so please report any issues.&lt;/p&gt;

&lt;p&gt;As a result, the &lt;code class=&quot;highlighter-rouge&quot;&gt;--no-separate-models&lt;/code&gt; option no longer works (it used to combine all model-level mass assignment warnings into one warning).
That old option used to report a completely messed-up file name, which is incompatible with &lt;code class=&quot;highlighter-rouge&quot;&gt;Brakeman::FilePath&lt;/code&gt;. Also, it was weird and wrong.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1354&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;empty-partial-names&quot;&gt;Empty Partial Names&lt;/h3&gt;

&lt;p&gt;If any empty string ends up as a partial name in a &lt;code class=&quot;highlighter-rouge&quot;&gt;render&lt;/code&gt; call, Brakeman will ignore it.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1352&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;checksums&quot;&gt;Checksums&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c8c48a88e9cd837122a590837ff5dbb4bd8214ad72baaffb75e5e5cd3585166f  brakeman-4.5.1.gem
48eaff4eb661f63d43c2f8b33da8efbabc6196ae5ff2ec58ad711e1649eff686  brakeman-lib-4.5.1.gem
c6fcfc5c32ec79a50281b0b97be5b703385ffb20ef45f770e7888ca6ba0b1666  brakeman-min-4.5.1.gem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;reporting-issues&quot;&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release!&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release. Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hang out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;</content><author><name></name></author><summary type="html">This release adds initial support for Rails 6!</summary></entry><entry><title type="html">Brakeman 4.5.0 Released</title><link href="https://brakemanscanner.org/blog/2019/03/15/4-dot-5-0-released" rel="alternate" type="text/html" title="Brakeman 4.5.0 Released" /><published>2019-03-15T13:14:00-07:00</published><updated>2019-03-15T13:14:00-07:00</updated><id>https://brakemanscanner.org/blog/2019/03/15/4-dot-5-0-released</id><content type="html" xml:base="https://brakemanscanner.org/blog/2019/03/15/4-dot-5-0-released">&lt;p&gt;This release drops support for running Brakeman with versions of Ruby older than 2.3.0. As always, scanning code with older syntax continues to be supported.&lt;/p&gt;

&lt;p&gt;Also in this release: better supported for embedded “filters” in templates and (relatedly) the Sass dependency was removed!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 4.4.0:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Officially drop support for running with older Ruby versions&lt;/li&gt;
  &lt;li&gt;More thoroughly handle &lt;code class=&quot;highlighter-rouge&quot;&gt;Shellwords&lt;/code&gt; escaping (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1323&quot;&gt;#1323&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Handle non-integer version number comparisons (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1305&quot;&gt;#1305&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Better handling of splat/kwsplat arguments (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1204&quot;&gt;#1204&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Handle &lt;code class=&quot;highlighter-rouge&quot;&gt;**&lt;/code&gt; inside Hash literals&lt;/li&gt;
  &lt;li&gt;Add support for CoffeeScript in Slim templates&lt;/li&gt;
  &lt;li&gt;Improve support for embedded template “filters”&lt;/li&gt;
  &lt;li&gt;Remove Sass dependency&lt;/li&gt;
  &lt;li&gt;Avoid joining strings with different encodings&lt;/li&gt;
  &lt;li&gt;Improve “user input” reported for SQL injection&lt;/li&gt;
  &lt;li&gt;Stop swallowing exceptions in &lt;code class=&quot;highlighter-rouge&quot;&gt;AliasProcessor&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Add original exception to &lt;code class=&quot;highlighter-rouge&quot;&gt;Tracker#errors&lt;/code&gt; list&lt;/li&gt;
  &lt;li&gt;Use &lt;code class=&quot;highlighter-rouge&quot;&gt;FileParser&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;Scanner&lt;/code&gt; to parse files&lt;/li&gt;
  &lt;li&gt;Set location information in &lt;code class=&quot;highlighter-rouge&quot;&gt;CheckContentTag&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Update RubyParser to 3.13.0&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;dropped-support-for-older-rubies&quot;&gt;Dropped Support for Older Rubies&lt;/h3&gt;

&lt;p&gt;Brakeman code will no longer attempt to maintain compatibility with Ruby 1.9.3, instead setting the minimum version to Ruby 2.3.0.&lt;/p&gt;

&lt;p&gt;Note that Ruby 2.2.0 reached end of life almost a year ago and is no longer receiving security updates.&lt;/p&gt;

&lt;p&gt;This does &lt;em&gt;not&lt;/em&gt; affect the versions of Ruby code Brakeman can analyze. Thanks to RubyParser, scanning syntax back to Ruby 1.8 is still supported.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1329&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;more-shell-escaping&quot;&gt;More Shell Escaping&lt;/h3&gt;

&lt;p&gt;Brakeman is now better at handling shell escaping with &lt;code class=&quot;highlighter-rouge&quot;&gt;Shellwords&lt;/code&gt; when checking for command injection.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1327&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;non-integer-version-numbers&quot;&gt;Non-Integer Version Numbers&lt;/h3&gt;

&lt;p&gt;When comparing non-integer version numbers (e.g., &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;beta1&quot;&lt;/code&gt;), Brakeman will compare integers to integers and strings to strings instead of
incorrectly converting some strings to integers.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1326&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;more-splats&quot;&gt;More Splats&lt;/h3&gt;

&lt;p&gt;Splat args (&lt;code class=&quot;highlighter-rouge&quot;&gt;*arg&lt;/code&gt;) and double splat/keyword splats (&lt;code class=&quot;highlighter-rouge&quot;&gt;**kwargs&lt;/code&gt;) are better supported now (instead of being ignored).
Keyward splats inside of hash literals will be merged into the hash literal.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1315&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;embedded-template-filters&quot;&gt;Embedded Template Filters&lt;/h3&gt;

&lt;p&gt;Support for embedded filters in templates (e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;markdown&lt;/code&gt; inside of Haml or Slim) has been completely rewritten. As a result, it is simpler to support embedded filters &lt;em&gt;and&lt;/em&gt; it was possible to drop the Sass dependency. (The Sass gem itself is deprecated and will be &lt;a href=&quot;https://sass-lang.com/ruby-sass&quot;&gt;end of life as of March 31st, 2019&lt;/a&gt;.)&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1314&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;string-encoding&quot;&gt;String Encoding&lt;/h3&gt;

&lt;p&gt;Previously, it was possible to run into errors when Brakeman attempted to join or concatenate strings with different encodings. Now it will just fail and leave the strings apart.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1293&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;better-reporting-of-sql-injection&quot;&gt;Better Reporting of SQL Injection&lt;/h3&gt;

&lt;p&gt;SQL injection warnings now have better information about which value triggered the warning. Previously, sometimes the value highlighted as “dangerous” was misleading and confusing.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1297&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;rubyparser-updated&quot;&gt;RubyParser Updated&lt;/h3&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;http://www.zenspider.com/&quot;&gt;Ryan Davis&lt;/a&gt;, RubyParser now has better support for newer Ruby 2.5 and Ruby 2.6 syntax, along with many other fixes!&lt;/p&gt;

&lt;p&gt;This should address many of the parsing errors folks have been seeing.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1330&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;checksums&quot;&gt;Checksums&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c82c73e47668e1381829bcf50d09b952f7968bc36af9c5abd6ee20ee03882130  brakeman-4.5.0.gem
0d372dac72e6bf7f9ff9c2558e3f5d92ef62cd4c6ab051fcea88016f3bfa7470  brakeman-lib-4.5.0.gem
8565a780be3595ffc5a8d847f6eece8746a272138290fff115555d7aecaa1a38  brakeman-min-4.5.0.gem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;reporting-issues&quot;&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release!&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release. Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hang out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;</content><author><name></name></author><summary type="html">This release drops support for running Brakeman with versions of Ruby older than 2.3.0. As always, scanning code with older syntax continues to be supported.</summary></entry><entry><title type="html">Brakeman 4.4.0 Released</title><link href="https://brakemanscanner.org/blog/2019/01/17/brakeman-4-dot-4-dot-0-released" rel="alternate" type="text/html" title="Brakeman 4.4.0 Released" /><published>2019-01-17T13:14:00-08:00</published><updated>2019-01-17T13:14:00-08:00</updated><id>https://brakemanscanner.org/blog/2019/01/17/brakeman-4-dot-4-dot-0-released</id><content type="html" xml:base="https://brakemanscanner.org/blog/2019/01/17/brakeman-4-dot-4-dot-0-released">&lt;p&gt;Happy new year and apologies for the delay in releases! Brakeman should now return to the normal 1-2 month release cycle. There are already pull requests lined up for the next release.&lt;/p&gt;

&lt;p&gt;This release includes a number of fixes and new features. In particular, please note there are large changes to how reports and warning messages are generated. Please report any issues!&lt;/p&gt;

&lt;p&gt;Also, the &lt;code class=&quot;highlighter-rouge&quot;&gt;brakeman&lt;/code&gt; gem version of this release no longer supports use of Slim with Ruby 1.9.3. See below for details.&lt;/p&gt;

&lt;p&gt;As noted previously, due to the &lt;a href=&quot;https://brakemanscanner.org/blog/2018/06/28/brakeman-has-been-acquired-by-synopsys/index.html&quot;&gt;Synopsys acquisition&lt;/a&gt; Brakeman is now distributed under a non-OSS license. See below for details.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 4.3.1:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Add check for CVE-2018-3760&lt;/li&gt;
  &lt;li&gt;Add &lt;code class=&quot;highlighter-rouge&quot;&gt;--enable&lt;/code&gt; option to enable optional checks&lt;/li&gt;
  &lt;li&gt;Add Dockerfile to run Brakeman inside Docker (&lt;a href=&quot;https://github.com/ryankemper&quot;&gt;Ryan Kemper&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Handle empty &lt;code class=&quot;highlighter-rouge&quot;&gt;secrets.yml&lt;/code&gt; files (&lt;a href=&quot;https://github.com/naokikimura&quot;&gt;Naoki Kimura&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Ignore Tempfiles in FileAccess warnings (&lt;a href=&quot;https://github.com/cmkoller&quot;&gt;Christina Koller&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Avoid warning about command injection when &lt;code class=&quot;highlighter-rouge&quot;&gt;String#shellescape&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Shellwords.shelljoin&lt;/code&gt; are used (&lt;a href=&quot;https://github.com/oggy&quot;&gt;George Ogata&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Treat &lt;code class=&quot;highlighter-rouge&quot;&gt;if not&lt;/code&gt; like &lt;code class=&quot;highlighter-rouge&quot;&gt;unless&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1225&quot;&gt;#1225&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fix Rails 4 configuration handling&lt;/li&gt;
  &lt;li&gt;Set default encoding to UTF-8&lt;/li&gt;
  &lt;li&gt;Support reading gem versions from gemspecs&lt;/li&gt;
  &lt;li&gt;Support gem versions which are just major.minor (e.g. 3.0)&lt;/li&gt;
  &lt;li&gt;Correctly set &lt;code class=&quot;highlighter-rouge&quot;&gt;rel=&quot;noreferrer&quot;&lt;/code&gt; in HTML reports&lt;/li&gt;
  &lt;li&gt;Fix thread-safety issue in CallIndex&lt;/li&gt;
  &lt;li&gt;Fix trim mode for ERb templates in old Rails versions&lt;/li&gt;
  &lt;li&gt;Avoid &lt;code class=&quot;highlighter-rouge&quot;&gt;nil&lt;/code&gt; errors when concatenating arrays&lt;/li&gt;
  &lt;li&gt;Add rendered template information to render paths&lt;/li&gt;
  &lt;li&gt;Trim some unnecessary files from bundled gems&lt;/li&gt;
  &lt;li&gt;Deadcode and typo fixes found via Coverity&lt;/li&gt;
  &lt;li&gt;Complete overhaul of warning message construction&lt;/li&gt;
  &lt;li&gt;Update to Slim 4.0.1 (&lt;a href=&quot;https://github.com/Jakenberg&quot;&gt;Jake Peterson&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Update to RubyParser 3.12.0&lt;/li&gt;
  &lt;li&gt;Updated license&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;cve-2018-3760&quot;&gt;CVE-2018-3760&lt;/h3&gt;

&lt;p&gt;A new check was added for &lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/ft_J--l55fM/7roDfQ50BwAJ&quot;&gt;CVE-2018-3760&lt;/a&gt; (Sprockets path traversal vulnerability).
Brakeman will warn about use of the affected Sprockets version and &lt;code class=&quot;highlighter-rouge&quot;&gt;config.assets.compile = true&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1241&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;enable-optional-checks&quot;&gt;Enable Optional Checks&lt;/h3&gt;

&lt;p&gt;Brakeman has options to enable &lt;em&gt;all&lt;/em&gt; checks, to disable &lt;em&gt;some&lt;/em&gt; checks, and to enable a subset of checks, but not to enable &lt;em&gt;default&lt;/em&gt;+&lt;em&gt;some optional&lt;/em&gt; checks.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;--enable&lt;/code&gt; option has been added to allow enabling individual optional checks.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1263&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;docker-support&quot;&gt;Docker Support&lt;/h3&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/ryankemper&quot;&gt;Ryan Kemper&lt;/a&gt;, Brakeman now has a Dockerfile to enable local building and running of Brakeman inside Docker.&lt;/p&gt;

&lt;p&gt;Additionally, there is now a &lt;a href=&quot;https://hub.docker.com/r/presidentbeef/brakeman&quot;&gt;Docker image available for Brakeman&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker pull presidentbeef/brakeman
docker run -v &quot;$(pwd)&quot;:/code brakeman --color
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;See the Brakeman &lt;a href=&quot;https://github.com/presidentbeef/brakeman#running-with-docker&quot;&gt;README&lt;/a&gt; for more details.&lt;/p&gt;

&lt;p&gt;Please note the Docker image is built from the master Brakeman branch. The master branch is typically stable, but it will typically be ahead of the gem release.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1252&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;empty-secrets&quot;&gt;Empty Secrets&lt;/h3&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/naokikimura&quot;&gt;Naoki Kimura&lt;/a&gt;, Brakeman will no longer show an error when the &lt;code class=&quot;highlighter-rouge&quot;&gt;secrets.yml&lt;/code&gt; file is empty.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1254&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;file-access-with-tempfiles&quot;&gt;File Access with Tempfiles&lt;/h3&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/cmkoller&quot;&gt;Christina Koller&lt;/a&gt;, Brakeman will no longer warn about file access issues when Tempfiles are used.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1244&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;shellescape-and-command-injection&quot;&gt;Shellescape and Command Injection&lt;/h3&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/oggy&quot;&gt;George Ogata&lt;/a&gt;, Brakeman will no longer warn about command injection when &lt;code class=&quot;highlighter-rouge&quot;&gt;shelljoin&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;shellescape&lt;/code&gt; are used.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1242&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;rails-4-configuration&quot;&gt;Rails 4 Configuration&lt;/h3&gt;

&lt;p&gt;When implementing the check for CVE-2018-3760, it was discovered that Brakeman was not handling the Rails 4 configuration format properly:&lt;/p&gt;

&lt;p&gt;Brakeman was not picking up any configuration options if this format was used:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;AppName&amp;gt;.application.configure do
  #...
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1241/commits/515a2f9e185f2488e227f39ed930ef6cf2bcee3a&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;default-encoding&quot;&gt;Default Encoding&lt;/h3&gt;

&lt;p&gt;Brakeman now sets the default external encoding to &lt;code class=&quot;highlighter-rouge&quot;&gt;UTF-8&lt;/code&gt; to avoid issues where the environment might set a different encoding.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1288&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;gem-versions&quot;&gt;Gem Versions&lt;/h3&gt;

&lt;p&gt;Brakeman can now read gem versions from &lt;code class=&quot;highlighter-rouge&quot;&gt;gemspec&lt;/code&gt; files. This is common for Rails engines.&lt;/p&gt;

&lt;p&gt;Additionally, Brakeman now understands versions which only specify major/minor versions (e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;~&amp;gt;4.0&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;The order of precedence is &lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile.lock&lt;/code&gt; &amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt; &amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;*.gemspec&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1257/&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;no-referrer-in-html-reports&quot;&gt;No Referrer in HTML Reports&lt;/h3&gt;

&lt;p&gt;Brakeman has unfortunately been setting &lt;code class=&quot;highlighter-rouge&quot;&gt;rel=&quot;no-referrer&quot;&lt;/code&gt; instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;rel=&quot;noreferrer&quot;&lt;/code&gt; in HTML reports.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1259/commits/d3e487bfd1d080971af56f7658bf2c8888e4cdb2&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;thread-safety-in-call-index&quot;&gt;Thread-Safety in Call Index&lt;/h3&gt;

&lt;p&gt;In rare cases (heavy CPU load?), accessing the CallIndex when running checks caused thread-unsafe behavior. This would have been reflected in a Ruby error about modifying the index during iteration, although checks don’t actual modify the CallIndex.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1271&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;erb-trim-mode&quot;&gt;ERb Trim Mode&lt;/h3&gt;

&lt;p&gt;Brakeman has been accidentally setting the “trim mode” to the template file path (oops!) which silently (!) worked in tests. This only affects Rails 2.x.&lt;/p&gt;

&lt;p&gt;This has been corrected and Ruby will now warn about &lt;a href=&quot;https://redmine.ruby-lang.org/issues/15294&quot;&gt;incorrect trim modes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1278&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;array-joins&quot;&gt;Array Joins&lt;/h3&gt;

&lt;p&gt;This release fixes a &lt;code class=&quot;highlighter-rouge&quot;&gt;nil&lt;/code&gt; error when attempting to concatenate arrays.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1251&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;rendered-template-information&quot;&gt;Rendered Template Information&lt;/h3&gt;

&lt;p&gt;Template “render paths” now include &lt;em&gt;which&lt;/em&gt; template was rendered.&lt;/p&gt;

&lt;p&gt;This is reflected in the JSON report:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;      &quot;render_path&quot;: [
        {
          &quot;type&quot;: &quot;controller&quot;,
          &quot;class&quot;: &quot;HomeController&quot;,
          &quot;method&quot;: &quot;test_to_json&quot;,
          &quot;line&quot;: 148,
          &quot;file&quot;: &quot;app/controllers/home_controller.rb&quot;,
          &quot;rendered&quot;: {
            &quot;name&quot;: &quot;home/test_to_json&quot;,
            &quot;file&quot;: &quot;app/views/home/test_to_json.html.erb&quot;
          }
        }
      ]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In the future this information may be used to improve other report formats as well.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1280&quot;&gt;changes&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;reduced-gem-size&quot;&gt;Reduced Gem Size&lt;/h3&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;brakeman&lt;/code&gt; gem &lt;a href=&quot;https://blog.presidentbeef.com/blog/2016/08/09/bundling-gem-dependencies-inside-ruby-gems/&quot;&gt;bundles all its dependencies&lt;/a&gt;, which makes the gem a bit big.&lt;/p&gt;

&lt;p&gt;This change removes some of the unneeded files (such as tests) and reduces the file size by about a third.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1253&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;dead-code-and-typos&quot;&gt;Dead Code and Typos&lt;/h3&gt;

&lt;p&gt;A few bits of dead code and minor typos were found via &lt;a href=&quot;https://www.synopsys.com/software-integrity/security-testing/static-analysis-sast.html&quot;&gt;Coverity&lt;/a&gt; and fixed.&lt;/p&gt;

&lt;h3 id=&quot;warning-message-overhaul&quot;&gt;Warning Message Overhaul&lt;/h3&gt;

&lt;p&gt;Brakeman warning messages were previously just strings.&lt;/p&gt;

&lt;p&gt;In order to introduce some formatting flexibility, Brakeman warning messages are now constructed as arrays of &lt;code class=&quot;highlighter-rouge&quot;&gt;Message&lt;/code&gt; objects.
These objects specify the type of the message string (e.g. “code” or “plain”). At report generation time, the messages can be converted to a particular format,
such as HTML, plaintext, etc.&lt;/p&gt;

&lt;p&gt;Along with this change, quite a bit of cleanup was performed on report generation in general.&lt;/p&gt;

&lt;p&gt;These changes make it easier to produce consistent messages as well as potentially supporting translation in the future.&lt;/p&gt;

&lt;p&gt;You may notice warning message text and/or formatting has changed as a result of these changes.
Please report any issues.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1259&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;dependency-updates&quot;&gt;Dependency Updates&lt;/h3&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/Jakenberg&quot;&gt;Jake Peterson&lt;/a&gt;, the Slim dependency has been updated to 4.0.1 to support newer syntax.&lt;/p&gt;

&lt;p&gt;Note that Slim 4.x not longer supports Ruby 1.9.3. You may need to use the &lt;code class=&quot;highlighter-rouge&quot;&gt;brakeman-lib&lt;/code&gt; gem or update your Ruby version.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1285&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;RubyParser has been updated to 3.12.0 which includes &lt;a href=&quot;https://github.com/seattlerb/ruby_parser/blob/master/History.rdoc#3120--2018-12-04&quot;&gt;some added syntax support and is faster!&lt;/a&gt;&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-conversation=&quot;none&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Here are some example Brakeman scan times with the RubyParser improvements. &lt;a href=&quot;https://t.co/yTxPVTGELH&quot;&gt;pic.twitter.com/yTxPVTGELH&lt;/a&gt;&lt;/p&gt;&amp;mdash; Justin Collins (@presidentbeef) &lt;a href=&quot;https://twitter.com/presidentbeef/status/1068232020478717952?ref_src=twsrc%5Etfw&quot;&gt;November 29, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1286&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;new-license&quot;&gt;New License&lt;/h3&gt;

&lt;p&gt;Brakeman is now distributed under the &lt;a href=&quot;https://github.com/presidentbeef/brakeman/blob/master/LICENSE.md&quot;&gt;Brakeman Public Use License&lt;/a&gt; which restricts commercial use of Brakeman.&lt;/p&gt;

&lt;p&gt;It does not restrict use of Brakeman to scan &lt;em&gt;your own code&lt;/em&gt; or your organization’s code, regardless of whether that code is proprietary, commercial, free, open source, etc.&lt;/p&gt;

&lt;p&gt;Feel free to message &lt;a href=&quot;https://twitter.com/presidentbeef&quot;&gt;@presidentbeef&lt;/a&gt; if you have questions.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1301&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;checksums&quot;&gt;Checksums&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;d3204cfe9d26782954ee8805fd748d11e8f950d2c1aee7c806c1856f273ee3b9  brakeman-4.4.0.gem
88849f05b1c85756fee8974b8061383493714676187af3b94b6a7978a7e1e58d  brakeman-lib-4.4.0.gem
0417c20b0b6dab00c5cf5e9341868dc5d8139bca463bf45fefa925cac286127e  brakeman-min-4.4.0.gem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;reporting-issues&quot;&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release!&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release. Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hang out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;</content><author><name></name></author><summary type="html">Happy new year and apologies for the delay in releases! Brakeman should now return to the normal 1-2 month release cycle. There are already pull requests lined up for the next release.</summary></entry><entry><title type="html">Happy 8th Birthday, Brakeman!</title><link href="https://brakemanscanner.org/blog/2018/08/30/happy-8th-birthday/index.html" rel="alternate" type="text/html" title="Happy 8th Birthday, Brakeman!" /><published>2018-08-30T09:37:00-07:00</published><updated>2018-08-30T09:37:00-07:00</updated><id>https://brakemanscanner.org/blog/2018/08/30/happy-8th-birthday/happy-8th-birthday</id><content type="html" xml:base="https://brakemanscanner.org/blog/2018/08/30/happy-8th-birthday/index.html">&lt;p&gt;In celebration of Brakeman’s 8th birthday this week, we’d like to share an update to keep you apprised of what we’ve been up to since our acquisition by Synopsys in June of this year.&lt;/p&gt;

&lt;p&gt;Stemming from the acquisition, Synopsys welcomed Justin Collins of the original Brakeman core team. He is working closely with the Synopsys Static Analysis division to integrate the Brakeman Pro Engine into the Coverity proprietary product offering. This is an exciting opportunity to build Ruby on Rails support into an enterprise-class engine that is &lt;a href=&quot;https://www.synopsys.com/software-integrity/resources/analyst-reports/2018-gartner-magic-quadrant.html&quot;&gt;quickly emerging as a leader&lt;/a&gt; in static application security testing.&lt;/p&gt;

&lt;p&gt;As for the Brakeman project, we’d like to assure you that Synopsys is committed to the continued success of the project.&lt;/p&gt;

&lt;p&gt;Synopsys has a rich history of working with the open source community through &lt;a href=&quot;https://scan.coverity.com/&quot;&gt;Coverity Scan&lt;/a&gt;, providing testing as a free service to support building quality and security into the open source software (OSS) development process. To-date since its inception in 2006, Coverity Scan has provided scanning support to over 4,600 open source projects. The December 2017 acquisition of Black Duck Software is another testament to Synopsys’ dedication to securing the growing use of open source.&lt;/p&gt;

&lt;p&gt;Rest easy knowing that Brakeman will continue to be maintained by the same team. Code will remain available on &lt;a href=&quot;https://github.com/presidentbeef/brakeman&quot;&gt;GitHub&lt;/a&gt;, and Ruby gems will continue being distributed via &lt;a href=&quot;https://rubygems.org/gems/brakeman&quot;&gt;RubyGems.org&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">In celebration of Brakeman’s 8th birthday this week, we’d like to share an update to keep you apprised of what we’ve been up to since our acquisition by Synopsys in June of this year.</summary></entry><entry><title type="html">Brakeman Has Been Acquired by Synopsys</title><link href="https://brakemanscanner.org/blog/2018/06/28/brakeman-has-been-acquired-by-synopsys/index.html" rel="alternate" type="text/html" title="Brakeman Has Been Acquired by Synopsys" /><published>2018-06-28T13:37:00-07:00</published><updated>2018-06-28T13:37:00-07:00</updated><id>https://brakemanscanner.org/blog/2018/06/28/brakeman-has-been-acquired-by-synopsys/brakeman-has-been-acquired-by-synopsys</id><content type="html" xml:base="https://brakemanscanner.org/blog/2018/06/28/brakeman-has-been-acquired-by-synopsys/index.html">&lt;p&gt;We are excited to announce &lt;a href=&quot;https://brakemanpro.com&quot;&gt;Brakeman Pro&lt;/a&gt; has been acquired by Synopsys.&lt;/p&gt;

&lt;p&gt;Started in 2014, Brakeman Pro has been a partnership between &lt;a href=&quot;https://twitter.com/presidentbeef&quot;&gt;Justin Collins&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/ndm&quot;&gt;Neil Matatall&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/manicode&quot;&gt;Jim Manico&lt;/a&gt;, and &lt;a href=&quot;https://twitter.com/adamkorman&quot;&gt;Adam Korman&lt;/a&gt;. Although it’s been an unconventional journey, we are all grateful to have traveled it together. Sincere thanks to the many folks who supported, promoted, and encouraged us along the way.&lt;/p&gt;

&lt;p&gt;Justin Collins will be joining Synopsys to help integrate the Brakeman Pro Engine into their static application security testing (SAST) offerings, as well as continuing to develop and support the Brakeman OSS project. This is an exciting opportunity to focus on improving and expanding SAST for the Ruby community.&lt;/p&gt;

&lt;h3 id=&quot;brakeman-oss&quot;&gt;Brakeman OSS&lt;/h3&gt;

&lt;p&gt;This Brakeman OSS project is part of the acquisition, and Synopsys now owns the copyright previously held by Brakeman, Inc.&lt;/p&gt;

&lt;p&gt;The project going forward and any future contributions will be made available under the &lt;a href=&quot;https://creativecommons.org/licenses/by-nc-sa/4.0/&quot;&gt;Creative Commons Attribution-NonCommercial-ShareAlike 4.0 Public License&lt;/a&gt;. For most users who are using Brakeman for internal purposes or assessments, nothing will change. Brakeman OSS will continue to be maintained by the same folks, free, and open source. Code will remain available on &lt;a href=&quot;https://github.com/presidentbeef/brakeman&quot;&gt;GitHub&lt;/a&gt;, and Ruby gems will be distributed from &lt;a href=&quot;https://rubygems.org/gems/brakeman&quot;&gt;RubyGems.org&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;However, under the new license, it is no longer possible to use Brakeman OSS for the development of a commercial product or online service or to resell Brakeman OSS as a service. Companies wishing to do either will require a commercial agreement with Synopsys. Please see &lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1238#issuecomment-401448976&quot;&gt;here&lt;/a&gt; for more details.&lt;/p&gt;

&lt;h3 id=&quot;thank-you&quot;&gt;Thank You&lt;/h3&gt;

&lt;p&gt;Thank you again to our customers, friends, and family who supported us in making the web a little bit safer!&lt;/p&gt;</content><author><name></name></author><summary type="html">We are excited to announce Brakeman Pro has been acquired by Synopsys.</summary></entry><entry><title type="html">Brakeman 4.3.1 Released</title><link href="https://brakemanscanner.org/blog/2018/06/06/brakeman-4-dot-3-1-released" rel="alternate" type="text/html" title="Brakeman 4.3.1 Released" /><published>2018-06-06T19:55:00-07:00</published><updated>2018-06-06T19:55:00-07:00</updated><id>https://brakemanscanner.org/blog/2018/06/06/brakeman-4-dot-3-1-released</id><content type="html" xml:base="https://brakemanscanner.org/blog/2018/06/06/brakeman-4-dot-3-1-released">&lt;p&gt;Mostly false positive reduction and bug fixes in this one!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 4.3.0:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Add &lt;code class=&quot;highlighter-rouge&quot;&gt;:BRAKEMAN_SAFE_LITERAL&lt;/code&gt; to represent known-safe literals&lt;/li&gt;
  &lt;li&gt;Handle &lt;code class=&quot;highlighter-rouge&quot;&gt;Array#map&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Array#each&lt;/code&gt; over literal arrays (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1208&quot;&gt;#1208&lt;/a&gt; / &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1224&quot;&gt;#1224&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Use safe literal when accessing literal hash with unknown key (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1213&quot;&gt;#1213&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Allow &lt;code class=&quot;highlighter-rouge&quot;&gt;symbolize_keys&lt;/code&gt; to be called on &lt;code class=&quot;highlighter-rouge&quot;&gt;params&lt;/code&gt; in SQL (&lt;a href=&quot;https://github.com/JacobEvelyn&quot;&gt;Jacob Evelyn&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Improve handling of conditionals in shell commands (&lt;a href=&quot;https://github.com/JacobEvelyn&quot;&gt;Jacob Evelyn&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Avoid deprecated use of ERB in Ruby 2.6 (&lt;a href=&quot;https://github.com/koic&quot;&gt;Koichi ITO&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Ignore &lt;code class=&quot;highlighter-rouge&quot;&gt;Object#freeze&lt;/code&gt;, use the target instead (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1211&quot;&gt;#1211&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Ignore &lt;code class=&quot;highlighter-rouge&quot;&gt;foreign_key&lt;/code&gt; calls in SQL (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1202&quot;&gt;#1202&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Handle &lt;code class=&quot;highlighter-rouge&quot;&gt;included&lt;/code&gt; calls outside of classes/modules (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1209&quot;&gt;#1209&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Fix error when setting line number in implicit renders (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1210&quot;&gt;#1210&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;safe-literals&quot;&gt;Safe Literals&lt;/h3&gt;

&lt;p&gt;This version of Brakeman introduces a new way of handling “known safe” values (integers, string literals, etc.) where the &lt;em&gt;exact&lt;/em&gt; value is unknown. The uses of the values will be replaced with &lt;code class=&quot;highlighter-rouge&quot;&gt;:BRAKEMAN_SAFE_LITERAL&lt;/code&gt; instead of actual values, as Brakeman had done previously. The new approach avoids some unhelpful side-effects and allows for more of this kind of thing in the future.&lt;/p&gt;

&lt;p&gt;These changes fix up a number of false positives.&lt;/p&gt;

&lt;h4 id=&quot;array-safe-literals&quot;&gt;Array Safe Literals&lt;/h4&gt;

&lt;p&gt;In situations like&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[&quot;hello&quot;, &quot;there&quot;].each do |s|
  something_with(s)
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Brakeman will replace &lt;code class=&quot;highlighter-rouge&quot;&gt;s&lt;/code&gt; inside the block with &lt;code class=&quot;highlighter-rouge&quot;&gt;:BRAKEMAN_SAFE_LITERAL&lt;/code&gt;, since the value must be a string (or &lt;code class=&quot;highlighter-rouge&quot;&gt;nil&lt;/code&gt;, but Brakeman doesn’t worrry about that).&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Array#map&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Array#each&lt;/code&gt; are currently supported.&lt;/p&gt;

&lt;h4 id=&quot;hash-access-with-unknown-key&quot;&gt;Hash Access with Unknown Key&lt;/h4&gt;

&lt;p&gt;In code like&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;some_hash = { x: 1, y: 2}
result = some_hash[some_var]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Brakeman will replace &lt;code class=&quot;highlighter-rouge&quot;&gt;result&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;:BRAKEMAN_SAFE_LITERAL&lt;/code&gt; since the value must be an integer.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1227&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;symbolized-keys-in-params&quot;&gt;Symbolized Keys in Params&lt;/h3&gt;

&lt;p&gt;Calls to &lt;code class=&quot;highlighter-rouge&quot;&gt;params.symbolize_keys&lt;/code&gt; in ActiveRecord methods will not be treated as dangerous.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1217&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;conditionals-in-shell-commands&quot;&gt;Conditionals in Shell Commands&lt;/h3&gt;

&lt;p&gt;Use of interpolated &lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt; expressions (or the ternary version) in shell commands is now handled better, thanks to &lt;a href=&quot;https://github.com/JacobEvelyn&quot;&gt;Jacob Evelyn&lt;/a&gt;. The values of the branches will be checked for dangerous values before warning.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1214&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;update-erb-use-for-ruby-26&quot;&gt;Update ERB Use for Ruby 2.6&lt;/h3&gt;

&lt;p&gt;The interface for ERB will be &lt;a href=&quot;https://github.com/ruby/ruby/blob/2311087/NEWS#stdlib-updates-outstanding-ones-only&quot;&gt;updated in Ruby 2.6&lt;/a&gt;. &lt;a href=&quot;https://github.com/koic&quot;&gt;Koichi ITO&lt;/a&gt; provided a fix in preparation for this change.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1220&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;frozen-objects&quot;&gt;Frozen Objects&lt;/h3&gt;

&lt;p&gt;Since the use of &lt;code class=&quot;highlighter-rouge&quot;&gt;freeze&lt;/code&gt; is of little interest to Brakeman and obscures the object it is freezing, these calls are now ignored.&lt;/p&gt;

&lt;p&gt;This, especially combined with the safe literals above, cleans up some false positives.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1230&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;foreign-keys-in-sql&quot;&gt;Foreign Keys in SQL&lt;/h3&gt;

&lt;p&gt;Brakeman will now ignore calls to &lt;code class=&quot;highlighter-rouge&quot;&gt;foreign_key&lt;/code&gt; in SQL strings.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1229&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;not-moduleincluded-calls&quot;&gt;Not &lt;code class=&quot;highlighter-rouge&quot;&gt;Module#included&lt;/code&gt; Calls&lt;/h3&gt;

&lt;p&gt;Calls to &lt;code class=&quot;highlighter-rouge&quot;&gt;included&lt;/code&gt; outside of modules/classes will be ignored instead of causing an error.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1228&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;checksums&quot;&gt;Checksums&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;70722056ed1b168e2a56baff048fa155948e1d214513f0debe9e2b78f82691f8  brakeman-4.3.1.gem
01078dd352a273965aa207dbffd01b8fe511d2302137f1984ea8bbddc38da3ce  brakeman-lib-4.3.1.gem
1497a934e0fe929d4b2685a3282e7976ebd75e901c56183601b5c528ff4021e0  brakeman-min-4.3.1.gem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;reporting-issues&quot;&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release!&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release. Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hang out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;

&lt;p&gt;If you find Brakeman valuable and want to support its development (and get more features!), check out &lt;a href=&quot;https://brakemanpro.com/&quot;&gt;Brakeman Pro&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">Mostly false positive reduction and bug fixes in this one!</summary></entry><entry><title type="html">Brakeman 4.3.0 Released</title><link href="https://brakemanscanner.org/blog/2018/05/10/brakeman-4-dot-3-0-released" rel="alternate" type="text/html" title="Brakeman 4.3.0 Released" /><published>2018-05-10T15:36:00-07:00</published><updated>2018-05-10T15:36:00-07:00</updated><id>https://brakemanscanner.org/blog/2018/05/10/brakeman-4-dot-3-0-released</id><content type="html" xml:base="https://brakemanscanner.org/blog/2018/05/10/brakeman-4-dot-3-0-released">&lt;p&gt;Did you know we recently broke &lt;a href=&quot;http://bestgems.org/gems/brakeman&quot;&gt;11 million gem downloads&lt;/a&gt;? Wow!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 4.2.1:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Add &lt;code class=&quot;highlighter-rouge&quot;&gt;--parser-timeout&lt;/code&gt; option&lt;/li&gt;
  &lt;li&gt;Improve timeout error messages&lt;/li&gt;
  &lt;li&gt;Check exec-type calls even if they are targets (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1199&quot;&gt;#1199&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Index Kernel#` calls even if they are targets (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1183&quot;&gt;#1183&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;BaseCheck#include_interp?&lt;/code&gt; should return first string interpolation (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1189&quot;&gt;#1189&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Ignore &lt;code class=&quot;highlighter-rouge&quot;&gt;Process.pid&lt;/code&gt; in system calls&lt;/li&gt;
  &lt;li&gt;Warn about dangerous &lt;code class=&quot;highlighter-rouge&quot;&gt;link_to&lt;/code&gt; href with &lt;code class=&quot;highlighter-rouge&quot;&gt;sanitize()&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1187&quot;&gt;#1187&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Ignore &lt;code class=&quot;highlighter-rouge&quot;&gt;params#to_h&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;params#to_hash&lt;/code&gt; in SQL checks (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1180&quot;&gt;#1180&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Convert &lt;code class=&quot;highlighter-rouge&quot;&gt;Array#join&lt;/code&gt; to string interpolation (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1179&quot;&gt;#1179&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Change &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;&quot;.freeze&lt;/code&gt; to just &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;&quot;&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1182&quot;&gt;#1182&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--color&lt;/code&gt; can be used to force color output (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1175&quot;&gt;#1175&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Track parent calls in call index&lt;/li&gt;
  &lt;li&gt;Fix reported line numbers for CVE-2018-3741 and CVE-2018-8048&lt;/li&gt;
  &lt;li&gt;Code Climate: omit leading dot from &lt;code class=&quot;highlighter-rouge&quot;&gt;only_files&lt;/code&gt; (&lt;a href=&quot;https://github.com/toddmazierski&quot;&gt;Todd Mazierski&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;--color-option&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--color&lt;/code&gt; Option&lt;/h3&gt;

&lt;p&gt;Previously, &lt;code class=&quot;highlighter-rouge&quot;&gt;--no-color&lt;/code&gt; could be used to turn off ANSI color in text reports. Now, &lt;code class=&quot;highlighter-rouge&quot;&gt;--color&lt;/code&gt; can be used to force color output.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1176&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;--parser-timeout-option&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--parser-timeout&lt;/code&gt; Option&lt;/h3&gt;

&lt;p&gt;The default timeout for parsing a single file is 10 seconds. For some files, this may not be enough.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;--parser-timeout&lt;/code&gt; option can be used to specify a per-file timeout (in seconds).&lt;/p&gt;

&lt;p&gt;Additionally, the error message for parsing timeouts has been improved considerably.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1194&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;command-injection-fixes&quot;&gt;Command Injection Fixes&lt;/h3&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/JacobEvelyn&quot;&gt;Jacob Evelyn&lt;/a&gt; reporting a number of issues around command injection, there are several improvements.&lt;/p&gt;

&lt;p&gt;Use of backticks as targets of a call will now be checked for command injection.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;`blah #{something}` == &quot;expected output&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Previously, use of backticks was not being indexed in this case.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1185&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Somewhat similarly, other calls (such as &lt;code class=&quot;highlighter-rouge&quot;&gt;system&lt;/code&gt;) would not warn if they were targets of a call.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1200&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Brakeman will no longer warn about &lt;code class=&quot;highlighter-rouge&quot;&gt;Process.pid&lt;/code&gt; in system calls.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/commit/f9195312931caa49e369730a0798dad750150f76&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Also fixed an issue where searching for string interpolation would return the innermost instance instead of the first instance (typically you want the first one).&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1195&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;freeze-calls&quot;&gt;Freeze Calls&lt;/h3&gt;

&lt;p&gt;Calls to &lt;code class=&quot;highlighter-rouge&quot;&gt;String#freeze&lt;/code&gt; will essentially be ignored.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;blah&quot;.freeze
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;will be treated like&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;blah&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1188&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;more-strong-parameters-in-sql&quot;&gt;More Strong Parameters in SQL&lt;/h3&gt;

&lt;p&gt;Calls to &lt;code class=&quot;highlighter-rouge&quot;&gt;to_h&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;to_hash&lt;/code&gt; on &lt;code class=&quot;highlighter-rouge&quot;&gt;params&lt;/code&gt; will be ignored in the context of SQL injection.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1191&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;sanitize-in-link_to&quot;&gt;Sanitize in &lt;code class=&quot;highlighter-rouge&quot;&gt;link_to&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Brakeman will now warn on uses of &lt;code class=&quot;highlighter-rouge&quot;&gt;sanitize&lt;/code&gt; in attempts to avoid XSS in &lt;code class=&quot;highlighter-rouge&quot;&gt;link_to&lt;/code&gt;. Unfortunately, it does not work that way.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1192&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;arrayjoin-to-string-interpolation&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Array#join&lt;/code&gt; to String Interpolation&lt;/h3&gt;

&lt;p&gt;Uses of &lt;code class=&quot;highlighter-rouge&quot;&gt;Array#join&lt;/code&gt; will now be converted to string interpolation.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[1, thing, &quot;here&quot;].join(' ')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;will be changed to&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;1 #{thing} here&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This both fixes some false positives and helps detect more vulnerabilities in checks that are looking at string interpolation.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1198&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;parent-calls&quot;&gt;Parent Calls&lt;/h3&gt;

&lt;p&gt;Brakeman now tracks the parent method call (I’m sure there’s a better way to say that) of an argument. While this ended up not being needed for this release, it will help improve checks and messages in the future.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1193&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;checksums&quot;&gt;Checksums&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;9284a1a9413743b4c915eda40312395e0ee574c6286893a27074b6f9527648f4  brakeman-4.3.0.gem
89ba3385fab967114c31da1462401c03caa8847d1115566a77039d0bda95181e  brakeman-lib-4.3.0.gem
1834031c1e949242ea6d08b3b1036d3f7c12c28257cdfa94cf3d0459b6f851b6  brakeman-min-4.3.0.gem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;reporting-issues&quot;&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release!&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release. Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hang out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;

&lt;p&gt;If you find Brakeman valuable and want to support its development (and get more features!), check out &lt;a href=&quot;https://brakemanpro.com/&quot;&gt;Brakeman Pro&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">Did you know we recently broke 11 million gem downloads? Wow!</summary></entry><entry><title type="html">Brakeman 4.2.1 Released</title><link href="https://brakemanscanner.org/blog/2018/03/23/brakeman-4-dot-2-1-released" rel="alternate" type="text/html" title="Brakeman 4.2.1 Released" /><published>2018-03-23T17:19:00-07:00</published><updated>2018-03-23T17:19:00-07:00</updated><id>https://brakemanscanner.org/blog/2018/03/23/brakeman-4-dot-2-1-released</id><content type="html" xml:base="https://brakemanscanner.org/blog/2018/03/23/brakeman-4-dot-2-1-released">&lt;p&gt;This is a small release to add warnings for &lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/tP7W3kLc5u4/uDy2Br7xBgAJ&quot;&gt;CVE-2018-3741&lt;/a&gt; and &lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/b__OeLG9bts/waZTvSM2AQAJ&quot;&gt;CVE-2018-8048&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Please note there have been a number of vulnerabilities in the Rails HTML sanitization methods over the years. Only use sanitization when an application &lt;em&gt;must&lt;/em&gt; accept and render HTML from an untrusted source. Otherwise, escape outputs instead.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 4.2.0&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Add warning for CVE-2018-3741&lt;/li&gt;
  &lt;li&gt;Add warning for CVE-2018-8048&lt;/li&gt;
  &lt;li&gt;Scan &lt;code class=&quot;highlighter-rouge&quot;&gt;app/jobs/&lt;/code&gt; directory&lt;/li&gt;
  &lt;li&gt;Handle &lt;code class=&quot;highlighter-rouge&quot;&gt;template_exists?&lt;/code&gt; in controllers (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1124&quot;&gt;#1124&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;cve-2018-3741&quot;&gt;CVE-2018-3741&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/tP7W3kLc5u4/uDy2Br7xBgAJ&quot;&gt;CVE-2018-3741&lt;/a&gt; is a vulnerability in the &lt;code class=&quot;highlighter-rouge&quot;&gt;rails-html-sanitizer&lt;/code&gt; gem which may allow bypassing attribute whitelists and therefore cross-site scripting.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1171&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;cve-2018-8048&quot;&gt;CVE-2018-8048&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/b__OeLG9bts/waZTvSM2AQAJ&quot;&gt;CVE-2018-8048&lt;/a&gt; is a similar vulnerability in the &lt;code class=&quot;highlighter-rouge&quot;&gt;loofah&lt;/code&gt; gem.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1169&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;scan-jobs&quot;&gt;Scan Jobs&lt;/h3&gt;

&lt;p&gt;Brakeman will now scan files in the &lt;code class=&quot;highlighter-rouge&quot;&gt;app/jobs/&lt;/code&gt; directory and treat them as additional libraries.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1168&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;template-guard-condition&quot;&gt;Template Guard Condition&lt;/h3&gt;

&lt;p&gt;Brakeman will no longer warn about dynamic render paths if &lt;code class=&quot;highlighter-rouge&quot;&gt;template_exists?&lt;/code&gt; is used as a guard condition.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1170&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;a-note-on-vulnerabilities-in-depdendencies&quot;&gt;A Note on Vulnerabilities in Depdendencies&lt;/h3&gt;

&lt;p&gt;Brakeman does not warn about &lt;em&gt;all&lt;/em&gt; CVEs in application dependencies. There are many better tools that track and detect vulnerable dependencies.&lt;/p&gt;

&lt;p&gt;Brakeman only includes warnings about vulnerabilities announced on the &lt;a href=&quot;https://groups.google.com/d/msg/rubyonrails-security/b__OeLG9bts/waZTvSM2AQAJ&quot;&gt;Rails Security Mailing List&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;checksums&quot;&gt;Checksums&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;3ba1cd39d98edcae7a0802ef0206de1438439cfdf4edb559c676877e2c253498  brakeman-4.2.1.gem
54a4aa336f3c21477a9bab12eeba6bb79ffa34a015e89a748621f7fd037d1943  brakeman-lib-4.2.1.gem
d53f2275320dfe5609234e74ce3a73a7d8c44dfae824fb938a9bae2077a9aecf  brakeman-min-4.2.1.gem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;reporting-issues&quot;&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hang out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;

&lt;p&gt;If you find Brakeman valuable and want to support its development (and get more features!), check out &lt;a href=&quot;https://brakemanpro.com/&quot;&gt;Brakeman Pro&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">This is a small release to add warnings for CVE-2018-3741 and CVE-2018-8048.</summary></entry><entry><title type="html">Brakeman 4.2.0 Released</title><link href="https://brakemanscanner.org/blog/2018/02/21/brakeman-4-dot-2-0-released" rel="alternate" type="text/html" title="Brakeman 4.2.0 Released" /><published>2018-02-21T13:34:00-08:00</published><updated>2018-02-21T13:34:00-08:00</updated><id>https://brakemanscanner.org/blog/2018/02/21/brakeman-4-dot-2-0-released</id><content type="html" xml:base="https://brakemanscanner.org/blog/2018/02/21/brakeman-4-dot-2-0-released">&lt;p&gt;First release of 2018!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 4.1.1:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Handle ERb use of &lt;code class=&quot;highlighter-rouge&quot;&gt;String#&amp;lt;&amp;lt;&lt;/code&gt; method for Ruby 2.5 (&lt;a href=&quot;https://github.com/pocke&quot;&gt;Pocke&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Exclude template folders in &lt;code class=&quot;highlighter-rouge&quot;&gt;lib/&lt;/code&gt; (&lt;a href=&quot;https://github.com/Kani999&quot;&gt;kru0096&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Warn about SQL injection with &lt;code class=&quot;highlighter-rouge&quot;&gt;not&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Avoid warning about symbol DoS on &lt;code class=&quot;highlighter-rouge&quot;&gt;Model#attributes&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1096&quot;&gt;#1096&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Avoid warning about open redirects with model methods ending with &lt;code class=&quot;highlighter-rouge&quot;&gt;_path&lt;/code&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1117&quot;&gt;#1117&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Avoid warning about command injection with &lt;code class=&quot;highlighter-rouge&quot;&gt;Shellwords.escape&lt;/code&gt; (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1159&quot;&gt;#1159&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Use ivars from &lt;code class=&quot;highlighter-rouge&quot;&gt;initialize&lt;/code&gt; in libraries&lt;/li&gt;
  &lt;li&gt;Fix multiple assignment of globals (&lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues/1155&quot;&gt;#1155&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Sexp#body=&lt;/code&gt; can accept &lt;code class=&quot;highlighter-rouge&quot;&gt;:rlist&lt;/code&gt; from &lt;code class=&quot;highlighter-rouge&quot;&gt;Sexp#body_list&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Update RubyParser to 3.11.0&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;update-erb-handling-for-ruby-250&quot;&gt;Update ERb Handling for Ruby 2.5.0&lt;/h3&gt;

&lt;p&gt;The way ERb templates are compiled changed in Ruby 2.5.0 to use &lt;code class=&quot;highlighter-rouge&quot;&gt;String#&amp;lt;&amp;lt;&lt;/code&gt;, so Brakeman has been changed to accomodate.&lt;/p&gt;

&lt;p&gt;Please note ERb also changed such that &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;% #&lt;/code&gt; is not supported in Ruby 2.5.0. It will be fixed in the next Ruby release, but the correct syntax is &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;%#&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1149&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;exclude-template-folders&quot;&gt;Exclude Template Folders&lt;/h3&gt;

&lt;p&gt;Files in &lt;code class=&quot;highlighter-rouge&quot;&gt;lib/**/templates&lt;/code&gt; will be ignored, since they are generally ERb files, not actually Ruby.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1143&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;sql-injection-with-not&quot;&gt;SQL Injection with &lt;code class=&quot;highlighter-rouge&quot;&gt;not&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;In ActiveRecord, &lt;code class=&quot;highlighter-rouge&quot;&gt;not&lt;/code&gt; takes the same arguments as &lt;code class=&quot;highlighter-rouge&quot;&gt;where&lt;/code&gt;, making it just as vulnerable to SQL injection.&lt;/p&gt;

&lt;p&gt;Thank you to &lt;a href=&quot;https://twitter.com/jobertabma&quot;&gt;Jobert Abma&lt;/a&gt; for reporting this.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1152&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;symbol-dos-false-positive&quot;&gt;Symbol DoS False Positive&lt;/h3&gt;

&lt;p&gt;Brakeman will no longer warn about &lt;code class=&quot;highlighter-rouge&quot;&gt;Model#attributes.symbolize_keys&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1165&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;open-redirect-false-positive&quot;&gt;Open Redirect False Positive&lt;/h3&gt;

&lt;p&gt;Brakeman will no longer warn about open redirects with &lt;code class=&quot;highlighter-rouge&quot;&gt;Model#something_ending_in_path&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1164&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;shellwords-escaping&quot;&gt;Shellwords Escaping&lt;/h3&gt;

&lt;p&gt;Brakeman will no longer warn about command injection when &lt;code class=&quot;highlighter-rouge&quot;&gt;Shellwords.escape&lt;/code&gt; and friends are used.&lt;/p&gt;

&lt;p&gt;Please note that user input in shell commands is rarely a good idea, even if escaped, since they can change the behavior of the program in unexpected ways. Many Linux tools have options that allow arbitrary code execution.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1162&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;use-initialized-environment-in-libraries&quot;&gt;Use Initialized Environment in Libraries&lt;/h3&gt;

&lt;p&gt;When processing libraries, instance variables set in &lt;code class=&quot;highlighter-rouge&quot;&gt;initialize&lt;/code&gt; will be used in subsequent methods.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1161&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;update-rubyparser&quot;&gt;Update RubyParser&lt;/h3&gt;

&lt;p&gt;This release includes updated versions of RubyParser and friends. This may cause some warning fingerprints to change if they include a call to &lt;code class=&quot;highlighter-rouge&quot;&gt;self[...]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;https://github.com/presidentbeef/brakeman/pull/1160&quot;&gt;changes&lt;/a&gt;)&lt;/p&gt;

&lt;h3 id=&quot;checksums&quot;&gt;Checksums&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c6ad3861920075ccf553343815fcce07aa09d015bc8529c6e4d8a865674530f7  brakeman-4.2.0.gem
94a97496761ddd27974867bde3235cab303761dadec4bd6a8d22260a72aaaa38  brakeman-lib-4.2.0.gem
a071eb6d6e866df0338bcb9c8dd56f5b0d66c68212eb604f551ac8aa196d6923  brakeman-min-4.2.0.gem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;reporting-issues&quot;&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hang out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;

&lt;p&gt;If you find Brakeman valuable and want to support its development (and get more features!), check out &lt;a href=&quot;https://brakemanpro.com/&quot;&gt;Brakeman Pro&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">First release of 2018!</summary></entry><entry><title type="html">Brakeman 4.1.1 Released</title><link href="https://brakemanscanner.org/blog/2017/12/18/brakeman-4-dot-1-1-released" rel="alternate" type="text/html" title="Brakeman 4.1.1 Released" /><published>2017-12-18T23:16:00-08:00</published><updated>2017-12-18T23:16:00-08:00</updated><id>https://brakemanscanner.org/blog/2017/12/18/brakeman-4-dot-1-1-released</id><content type="html" xml:base="https://brakemanscanner.org/blog/2017/12/18/brakeman-4-dot-1-1-released">&lt;p&gt;Just a small fix-up release!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Changes since 4.1.0&lt;/em&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Remove check for use of &lt;code class=&quot;highlighter-rouge&quot;&gt;permit&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;*_id&lt;/code&gt; keys&lt;/li&gt;
  &lt;li&gt;Avoid duplicate warnings about permitted attributes&lt;/li&gt;
  &lt;li&gt;Avoid duplicate warnings about division by zero&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;checksums&quot;&gt;Checksums&lt;/h3&gt;

&lt;p&gt;The SHA256 sums for this release are:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;7b65d6694b488aaa09e147f5a39d7e544385a11ec52ae93058b04b17999925b6  brakeman-4.1.1.gem
ffb525462d391f9a7f85b9b1ebbf7b165d03cd2eaed7093c3f1b4fdb135947e2  brakeman-lib-4.1.1.gem
b50a7b19d56a7606cd3a625611f8e720d47da8a57d126e7dcf443714cec98194  brakeman-min-4.1.1.gem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;reporting-issues&quot;&gt;Reporting Issues&lt;/h3&gt;

&lt;p&gt;Thank you to everyone who reported bugs and contributed to this release.&lt;/p&gt;

&lt;p&gt;Please report any &lt;a href=&quot;https://github.com/presidentbeef/brakeman/issues&quot;&gt;issues&lt;/a&gt; with this release! Take a look at &lt;a href=&quot;https://github.com/presidentbeef/brakeman/wiki/How-to-Report-a-Brakeman-Issue&quot;&gt;this guide&lt;/a&gt; to reporting Brakeman problems.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;https://twitter.com/brakeman&quot;&gt;@brakeman&lt;/a&gt; on Twitter and hang out &lt;a href=&quot;https://gitter.im/presidentbeef/brakeman&quot;&gt;on Gitter&lt;/a&gt; for questions and discussion.&lt;/p&gt;

&lt;p&gt;If you find Brakeman valuable and want to support its development (and get more features!), check out &lt;a href=&quot;https://brakemanpro.com/&quot;&gt;Brakeman Pro&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">Just a small fix-up release!</summary></entry></feed>